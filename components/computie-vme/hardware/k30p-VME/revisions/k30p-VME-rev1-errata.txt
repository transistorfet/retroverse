
Revision 1 Errata and Notes
===========================

- I put all the surface mount chips on first without programming the CPLD, and it caused almost 1.5A
  of current draw from the transceivers outputting into each other (very bad).  This also happens
  when programming the CPLD, because the /OE signals are active low, and when those outputs (driven
  by the CPLD) are high impedence during programming, it causes them to output into eachother again
  and get hot enough to burn my fingers.  I absolutely need to add logic to only enable one at a
  time, or pull the /OE signals high when not driven low.

- the JTAG connector labels are misleading and there's no pin 1 indicator, so it would be easy to
  connect it backwards

- inrush current is about 1.4A even though in only takes 100mA without the socketed chips.  Maybe
  I should add a 100 ohm resistor to limit the inrush, at least for select components

- the oscillator with a 50MHz crystal seems to be running at 16.666 MHz instead, and I think it's
  related to the 15k resistor across the crystal.  I'm seeing 1M ohm or even higher used in a lot of
  places, but if I put a big resistor in parallel (which should actually reduce the resistance below
  15k), it starts running at 50MHz, so it's definitely related to the resistor, but I'll have to play
  with sizes.  It turns out a 1K worked instead

- I've hooked up the USB-C connector incorrectly.  I only wired up one differential pair, but I
  should have jumped them to the matching pair, which are broken out as separate pins, and I also
  needed to add 5.1k pull down resistors to the CC1 and CC2 signals.  Apparently these are required.
  That said, I'm using a cable that only has the 4 pin USB-A connector on the other end, so I'm not
  sure this alone can explain why it's not enumerating at all.  As it turned out, it's working now,
  and I haven't tested it since I reflowed the FTDI so maybe that fixed it. [Ed: I've since determined
  that it depends on what orientation the USB-C connector is connected in, since the adjacent pairs
  are not jumped on the board, and they seem to not be jumped in the cable or in the connector, which
  I would have expected given that it's supposed to be for USB 2.0, but I guess it's up to the board
  to choose to connect them]

- the FTDI disconnects whenever power is cycled to the board, unlike the other boards I've had.
  This is because I wired it up as a self-powered device and not a bus-powered device like the
  adapter boards I have.  This could be annoying in practice, so I should consider changing how the
  FTDI itself is powered

- the jumper silkscreen labels aren't clear with respect to the logic value, and the symbol doesn't
  reflect whether the jumper should be installed or not

- the VRESET signal was not connected to the bus, so it wasn't pulled up during initial bringup and
  that was causing the CPU to reset sporadically, which was difficult to narrow down except by
  recognizing that touching the board was somehow causing it, but unreliably, and looking at what
  was connected around those areas

- if I had a power jumper for all 5V for the board (on every board, not just this one), I could
  figure out which board is drawing what current

- the CPLD can't directly see the upper 8 address lines, besides knowing that they're all high, so
  it can't determine if all the upper 8 address lines are all low, which means it can't properly
  select the local peripherals leaving the A40 space free.  Instead, it can only keep the A24 space
  free but if any request is in the range of the local peripherals (XX00_0000 to XX30_0000 for rom
  and ram, XX70_0000 for serial), it will issue a local request instead of an A40 VME request

- the serial interrupt requires a pull-up resistor or else it will always register as low.  The
  ATF1508 does have internal pull-ups from the looks of it, so I'll have to install an external one.
  It was previously directly connected to the CPU's IPL1 signal

- the footprint for the FTDI 20-SSOP doesn't really have enough visible pad space for soldering
  properly, which might be why it needed to be reflowed.  A footprint with longer pads would really
  help with hand soldering

- now that I have the FTDIs powered by the USB cable, when I power cycle the CPU or especially when
  I first power it on, it either doesn't run or spits out garbage characters.  I think it's a
  problem with the reset not being long enough.  I'll need to investigate more

- it would be really handy if I could have a 100MHz clock somehow.  I don't think a crystal can go
  high enough, so I might need a dedicated clock PLL chip, which I'm hesitant to use

- it might be good to put some series damping resistors in the clock traces, which might improve
  the clock signal a bit

